import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Importing the dataset
df = pd.read_csv("student_scores.csv")

# Dropping Unnamed Column
df = df.drop("Unnamed: 0", axis = 1)

# Changing the weekly study hours column
df["WklyStudyHours"] = df["WklyStudyHours"].str.replace("05-Oct", "5-10")

# gender distribution
plt.figure(figsize = (5, 5))
ax = sns.countplot(data = df, x = "Gender")
ax.bar_label(ax.containers[0])
plt.title("Gender Distribution")
plt.show()

# from the above chart we have analysed that:
# the number of females in the data is more than the number of males in the data.


# heatmap of agg score of students according to their parents education level.
gb = df.groupby("ParentEduc").agg({"MathScore" : 'mean', "ReadingScore" : 'mean', "WritingScore" : 'mean'})
print(gb)

plt.figure(figsize = (6, 7))
sns.heatmap(gb, annot = True)
plt.title("Relation between Parent's Education and Student's Score")
plt.show()

# from the above chart we can conclude that the education of the parent effects the students in their education.


# heatmap of the students scores according to their parents marital status.
gb1 = df.groupby("ParentMaritalStatus").agg({"MathScore" : 'mean', "ReadingScore" : 'mean', "WritingScore" : 'mean'})
print(gb1)

plt.figure(figsize = (6, 6))
sns.heatmap(gb1, annot = True)
plt.title("Relation between Parent's Marital Status and Student's Score")
plt.show()

# from the above chart we can assume that the marital status of the parent has next to no impact on the students scoring ability.


# finding outlires among the students

sns.boxplot(data = df, x = "MathScore")
plt.show()

sns.boxplot(data = df, x = "ReadingScore")
plt.show()

sns.boxplot(data = df, x = "WritingScore")
plt.show()

# from the above charts we can determine that the students in this perticular dataset are weak in maths.


print(df["EthnicGroup"].unique())

#distribution of ethnic groups

groupA = df.loc[(df['EthnicGroup'] == "group A")].count()
groupB = df.loc[(df['EthnicGroup'] == "group B")].count()
groupC = df.loc[(df['EthnicGroup'] == "group C")].count()
groupD = df.loc[(df['EthnicGroup'] == "group D")].count()
groupE = df.loc[(df['EthnicGroup'] == "group E")].count()

l = ["group A", "group B", "group C", "group D", "group E"]
mlist = [groupA["EthnicGroup"], groupB["EthnicGroup"], groupC["EthnicGroup"], groupD["EthnicGroup"], groupE["EthnicGroup"]]

plt.pie(mlist, labels = l, autopct = "%1.2f%%")
plt.title("Distribution of Ethnic Groups")
plt.show()

ax = sns.countplot(data = df, x = 'EthnicGroup')
ax.bar_label(ax.containers[0]) 